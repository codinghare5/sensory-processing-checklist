---
layout: layouts/base.njk
title: Read and Write Files 
templateClass: tmpl-post
eleventyNavigation:
  key: Read/Write
  parent: Test Code
  order: 3
---

<section class="container-xl card mb-2">
    <h1> Test Reading and Writing Files </h2>
    <nav class="d-flex justify-content-around py-4">
        {# button to save question answers #}
        <button class="p-2 bg-info rounded" id="savebutton" type="button">Save Text</button>
        {# button to save question answers #}
        {# input type='file' is best for loading a file in #}
        <button class="p-2 bg-info rounded" id="readbutton" type="button">Read Text</button>
    </nav>
</section>

</section>
    <textarea id="textarea" rows=20 class="w-100"></textarea>
</section>

<script>
    saveButton = document.getElementById("savebutton");
    readButton = document.getElementById("readbutton");
    textArea = document.getElementById("textarea")

    let fileHandle;
    readButton.addEventListener('click', async () => {
        [fileHandle] = await window.showOpenFilePicker();
        const file = await fileHandle.getFile();
        const contents = await file.text();
        textArea.value = contents;
    });

    async function getNewFileHandle() {
        const options = {
            types: [
                {
                    description: 'Text Files',
                    accept: {
                    'text/plain': ['.txt'],
                    },
                },
            ],
        };
        const handle = await window.showSaveFilePicker(options);
        console.log(handle);
    
        return handle;
    }

    async function writeFile(fileHandle, contents) {
        // Create a FileSystemWritableFileStream to write to.
        const writable = await fileHandle.createWritable();
        console.log(writable);
        // Write the contents of the file to the stream.
        //await writable.write(contents);
        // Close the file and write the contents to disk.
        //await writable.close();
    }

    saveButton.addEventListener('click', async () =>{
        try {
            let savehandle = await getNewFileHandle();
            const writable = await savehandle.createWritable();
            console.log(writable);
            await writable.write(textArea.value);
            console.log('now closing file');
            await writable.close();
        }
        catch(e) {
            console.log(e);
        };
    });

</script>